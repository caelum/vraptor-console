BINARY=vraptor-console-0.7.0-SNAPSHOT.jar

if [ -L ${BASH_SOURCE[0]} ]; then
        VRAPTOR_CONSOLE_PATH="$( dirname "$( readlink -f ${BASH_SOURCE[0]} )" )"
else
        VRAPTOR_CONSOLE_PATH="$( dirname "${BASH_SOURCE[0]}" )"
fi
SCRIPT_DIR="$( cd "${VRAPTOR_CONSOLE_PATH}" && pwd )"

PERM_GEM_OPTS=${PERM_GEM_OPTS:-"-XX:MaxPermSize=512m -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled"}
MEM_OPTS=${MEM_OPTS:-"-Xmx2g -Xms1g"}
DEBUG_OPTS=${DEBUG_OPTS:-"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=1044"}

EXTRA_COMMANDS=target/vraptor-console-extra/
RELEASE_PATH=$SCRIPT_DIR/lib/
TARGET=$RELEASE_PATH/$BINARY
JETTY_DIST=$RELEASE_PATH/jetty-distribution/
JETTY_URL="https://vraptor-console.googlecode.com/files/jetty-distribution-8.1.9.v20130131.tar.gz"
LOG4J_CONFIG="${SCRIPT_DIR}/log4j.xml"

if [ -e vraptor-console.properties ]; then
	source vraptor-console.properties
fi

if [ ! -f $TARGET ]; then
	curl http://ibiblio.com/$BINARY > $TARGET
fi
if [ ! -d $JETTY_DIST ]; then
	curl $JETTY_URL > $RELEASE_PATH/jetty-dist.tar.gz
	if [ $? != 0 ]; then
		echo "could not download jetty"
		exit 1
	fi
	tar xzf $RELEASE_PATH/jetty-dist.tar.gz -C $RELEASE_PATH >/dev/null
    mkdir $RELEASE_PATH/jetty-distribution
    # we actually just need lib dir
	mv $RELEASE_PATH/jetty-distribution-* $RELEASE_PATH/jetty-tmp/
	mv $RELEASE_PATH/jetty-tmp/lib $RELEASE_PATH/jetty-distribution/
    rm -rf $RELEASE_PATH/jetty-distribution-+/ $RELEASE_PATH/jetty-tmp/ $RELEASE_PATH/jetty-dist.tar.gz
fi


CLASSPATH="$SCRIPT_DIR/lib/*:$SCRIPT_DIR/lib/deps/*:${JETTY_DIST}/lib/*:${JETTY_DIST}/lib/jsp/*:$EXTRA_COMMANDS"

# http://docs.oracle.com/javase/7/docs/technotes/guides/jpda/conninv.html
java -Dlog4j.configuration=file:${LOG4J_CONFIG} ${EXTRA_VM_OPTS} ${PERM_GEM_OPTS} ${MEM_OPTS} ${DEBUG_OPTS} \
    -cp $CLASSPATH \
    br.com.caelum.vraptor.console.Main $@